{"version":3,"sources":["README.md"],"names":["frontMatter","ReactMarkdown","props","React","PureComponent"],"mappings":"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","file":"static/js/0.5064bff0.chunk.js","sourcesContent":["\n  import React from 'react';;\n\n  export const frontMatter = {};\n\n  export default class ReactMarkdown extends React.PureComponent {\n    render() {\n      const props = this.props;\n\n      return <div>\n  <p align=\"center\">\n    <img src=\"https://assets.breatheco.de/apis/img/images.php?blob&random&cat=icon&tags=breathecode,128\" />\n  </p>\n  <p>\n  </p><h2 align=\"center\"> React Session Management </h2>\n  <p />\n  <p><a href=\"https://GitHub.com/breatheco-de/react-session.js/graphs/commit-activity\"><img src=\"https://img.shields.io/badge/Maintained-yes-green.svg\" alt=\"Maintenance\" /></a>\n    <a href=\"https://www.npmjs.com/package/bc-react-session\"><img src=\"https://img.shields.io/npm/v/bc-react-session.svg\" alt=\"npm\" /></a>\n    <a href=\"https://www.npmjs.com/package/bc-react-session\"><img src=\"https://img.shields.io/npm/dm/bc-react-session.svg\" alt=\"npm\" /></a>\n    <a href=\"https://github.com/breatheco-de/react-session/blob/master/LICENSE\"><img src=\"https://img.shields.io/github/license/Naereen/StrapDown.js.svg\" alt=\"GitHub license\" /></a></p>\n  <p>Create and maintain persisten login sessions on the browser (even if the website is refreshed).\n    Checkout the <a href=\"https://breatheco-de.github.io/react-session/\">live demo</a>.</p>\n  <blockquote>\n    <p>Note: Extremely easy integration with <a href=\"https://github.com/ReactTraining/react-router\">React Router</a>.</p>\n  </blockquote>\n  <h2>Installation</h2>\n  <pre><code className=\"hljs language-shell\"><span className=\"hljs-meta\">$</span><span className=\"bash\"> npm i --save bc-react-session</span>{\"\\n\"}</code></pre>\n  <h2>Usage</h2>\n  <ol>\n    <li>Open a session by doing <code>Session.login();</code>:</li>\n  </ol>\n  <pre><code className=\"hljs language-js\"><span className=\"hljs-keyword\">import</span> {\"{\"}Session{\"}\"} <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">'bc-react-session'</span>;{\"\\n\"}{\"\\n\"}Session.start({\"{\"} {\"\\n\"}{\"    \"}<span className=\"hljs-attr\">payload</span>: {\"{\"}{\"\\n\"}{\"        \"}<span className=\"hljs-comment\">// (optional) any info you want to save on the persisten session</span>{\"\\n\"}{\"    \"}{\"}\"},{\"\\n\"}{\"    \"}<span className=\"hljs-attr\">expiration</span>: <span className=\"hljs-number\">86400000</span>; <span className=\"hljs-comment\">// (optional) defaults to 1 day</span>{\"\\n\"}{\"}\"});{\"\\n\"}</code></pre>\n  <ol start={2}>\n    <li>Close the session by doing <code>Session.destroy();</code>:</li>\n  </ol>\n  <pre><code className=\"hljs language-js\"><span className=\"hljs-keyword\">import</span> {\"{\"}Session{\"}\"} <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">'bc-react-session'</span>;{\"\\n\"}{\"\\n\"}Session.destroy();{\"\\n\"}</code></pre>\n  <ol start={3}>\n    <li>Retrieve the session and payload from anywhere</li>\n  </ol>\n  <pre><code className=\"hljs language-js\"><span className=\"hljs-keyword\">import</span> {\"{\"}Session{\"}\"} <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">'bc-react-session'</span>;{\"\\n\"}{\"\\n\"}<span className=\"hljs-keyword\">const</span> session = Session.getSession();{\"\\n\"}<span className=\"hljs-keyword\">const</span> payload = Session.getPayload();{\"\\n\"}{\"\\n\"}<span className=\"hljs-built_in\">console</span>.log(session.isValid); <span className=\"hljs-comment\">// will be true if is not expired or innactive</span>{\"\\n\"}<span className=\"hljs-built_in\">console</span>.log(payload); <span className=\"hljs-comment\">// anything you have set on the session payload is stored here</span>{\"\\n\"}</code></pre>\n  <h2>That is it!!</h2>\n  <h3>Some other functionalities:</h3>\n  <ol>\n    <li>Listen to session changes</li>\n  </ol>\n  <pre><code className=\"hljs language-js\"><span className=\"hljs-comment\">// listen to session changes</span>{\"\\n\"}<span className=\"hljs-keyword\">const</span> unsubscribe = Session.onChange(<span className=\"hljs-function\">(<span className=\"hljs-params\">session</span>) =&gt;</span> {\"{\"}{\"\\n\"}{\"  \"}<span className=\"hljs-built_in\">console</span>.log(session);{\"\\n\"}{\"  \"}{\"\\n\"}{\"  \"}<span className=\"hljs-keyword\">if</span>(session.expired) <span className=\"hljs-built_in\">console</span>.log(<span className=\"hljs-string\">'The session has expired'</span>){\"\\n\"}{\"  \"}<span className=\"hljs-keyword\">if</span>(session.autenticated) <span className=\"hljs-built_in\">console</span>.log(<span className=\"hljs-string\">'No one has logged in'</span>){\"\\n\"}{\"  \"}{\"\\n\"}{\"}\"});{\"\\n\"} {\"\\n\"} <span className=\"hljs-comment\">//unsubscribe to session changes if needed</span>{\"\\n\"}unsubscribe();{\"\\n\"}</code></pre>\n  <ol start={2}>\n    <li>Wait for session expiration callback</li>\n  </ol>\n  <pre><code className=\"hljs language-js\"><span className=\"hljs-comment\">// you need to enforce before calling the login method.</span>{\"\\n\"}Session.onExpiration(<span className=\"hljs-function\">(<span className=\"hljs-params\">session</span>) =&gt;</span> session.destroy()); <span className=\"hljs-comment\">//you can destroy the session if it expires</span>{\"\\n\"}</code></pre>\n  <ol start={3}>\n    <li>Change reset the session payload whenever you want</li>\n  </ol>\n  <pre><code className=\"hljs language-js\"><span className=\"hljs-keyword\">import</span> {\"{\"}Session{\"}\"} <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">'bc-react-session'</span>;{\"\\n\"}{\"\\n\"}<span className=\"hljs-comment\">// pass a new username that will override previous one (if any)</span>{\"\\n\"}Session.setPayload({\"{\"}{\"\\n\"}{\"    \"}<span className=\"hljs-attr\">username</span>: <span className=\"hljs-string\">'alesanchezr'</span>{\"\\n\"}{\"}\"});{\"\\n\"}</code></pre>\n  <ol start={4}>\n    <li>Check session expiration</li>\n  </ol>\n  <pre><code className=\"hljs language-cpp\"><span className=\"hljs-keyword\">const</span> session = Session.getSession();{\"\\n\"}console.<span className=\"hljs-built_in\">log</span>(session.expired); <span className=\"hljs-comment\">// boolean</span>{\"\\n\"}</code></pre>\n  <ol start={5}>\n    <li>Make a Private Route using react router</li>\n  </ol>\n  <p>The library brings a component called <code>&lt;PrivateRoute /&gt;</code> to make your routes private without any extra code.</p>\n  <pre><code className=\"hljs language-jsx\">&lt;BrowserRouter&gt;{\"\\n\"}{\"    \"}<span className=\"xml\"><span className=\"hljs-tag\">&lt;<span className=\"hljs-name\">div</span>&gt;</span>{\"\\n\"}{\"        \"}</span>&lt;PrivateRoute exact path='/profile' component={\"{\"}PrivateLayout{\"}\"} /&gt;{\"\\n\"}{\"    \"}&lt;/div&gt;<span className=\"xml\">{\"\\n\"}<span className=\"hljs-tag\">&lt;/<span className=\"hljs-name\">BrowserRouter</span>&gt;</span></span>{\"\\n\"}</code></pre>\n</div>\n;\n    }\n  }\n\n\n// WEBPACK FOOTER //\n// ./src/README.md"],"sourceRoot":""}